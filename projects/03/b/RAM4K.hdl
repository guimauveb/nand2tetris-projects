// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:

    RAM512(in=in, load=ram1, address=address[0..8], out=outram1);
    RAM512(in=in, load=ram2, address=address[0..8], out=outram2);
    RAM512(in=in, load=ram3, address=address[0..8], out=outram3);
    RAM512(in=in, load=ram4, address=address[0..8], out=outram4);
    RAM512(in=in, load=ram5, address=address[0..8], out=outram5);
    RAM512(in=in, load=ram6, address=address[0..8], out=outram6);
    RAM512(in=in, load=ram7, address=address[0..8], out=outram7);
    RAM512(in=in, load=ram8, address=address[0..8], out=outram8);

    DMux8Way(in=load, sel[2]=address[11], sel[1]=address[10], sel[0]=address[9], a=ram1, b=ram2, c=ram3, d=ram4, e=ram5, f=ram6, g=ram7, h=ram8);

    Mux8Way16(a=outram1, b=outram2, c=outram3, d=outram4, e=outram5, f=outram6, g=outram7, h=outram8, sel[2]=address[11], sel[1]=address[10], sel[0]=address[9], out=out);
}